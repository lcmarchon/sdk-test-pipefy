// Task Manager Pro - GitHub Pages
console.log('üöÄ Iniciando Task Manager Pro - GitHub Pages');

// Defini√ß√£o do PipefyApp seguindo documenta√ß√£o oficial
const PipefyApp = {
    'pipe-buttons': function(p, pipe) {
        console.log('üìå Pipe buttons chamado - pipe:', pipe);
        
        return [
            {
                icon: 'https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f4ca.svg',
                text: 'Dashboard',
                callback: function(p) {
                    console.log('‚úÖ Dashboard clicado');
                    
                    p.dropdown({
                        title: 'Dashboard App',
                        items: [
                            {
                                title: 'M√©tricas',
                                callback: function(p) {
                                    console.log('üìä M√©tricas selecionado');
                                    p.showMessage({
                                        type: 'success',
                                        text: 'üìä Abrindo m√©tricas...'
                                    });
                                    p.closeDropdown();
                                }
                            },
                            {
                                title: 'Performance',
                                callback: function(p) {
                                    console.log('üìà Performance selecionado');
                                    p.showMessage({
                                        type: 'info',
                                        text: 'üìà Carregando performance...'
                                    });
                                    p.closeDropdown();
                                }
                            },
                            {
                                title: 'Exportar',
                                callback: function(p) {
                                    console.log('üíæ Exportar selecionado');
                                    p.showMessage({
                                        type: 'success',
                                        text: 'üíæ Exportando dados...'
                                    });
                                    p.closeDropdown();
                                }
                            }
                        ]
                    });
                }
            },
            {
                icon: 'https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/23f1.svg',
                text: 'Timer',
                callback: function(p) {
                    console.log('‚úÖ Timer clicado');
                    p.showMessage({
                        type: 'info',
                        text: '‚è±Ô∏è Timer iniciado!'
                    });
                }
            }
        ];
    },
    
    'card-buttons': function(p, card) {
        console.log('üé¥ Card buttons chamado - card:', card);
        
        return [
            {
                icon: 'https://cdn.jsdelivr.net/gh/twitter/twemoji@latest/assets/svg/1f4dd.svg',
                text: 'Notas',
                callback: function(p) {
                    console.log('‚úÖ Notas clicado para card:', card?.id);
                    p.showMessage({
                        type: 'success',
                        text: 'üìù Abrindo notas do card!'
                    });
                }
            }
        ];
    }
};

// Exposi√ß√£o robusta do PipefyApp
function exposePipefyApp() {
    try {
        // Exposi√ß√£o principal
        window.PipefyApp = PipefyApp;
        
        // Verifica√ß√£o
        if (window.PipefyApp) {
            console.log('‚úÖ PipefyApp exposto no window');
            console.log('üîç Fun√ß√µes:', Object.keys(PipefyApp));
            
            // Update UI se existir
            const statusEl = document.getElementById('status');
            if (statusEl) {
                statusEl.innerHTML = '‚úÖ SDK carregada - GitHub Pages!';
                statusEl.style.color = '#10B981';
            }
        }
        
    } catch (error) {
        console.error('‚ùå Erro ao expor PipefyApp:', error);
    }
}

// Inicializa√ß√£o
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', exposePipefyApp);
} else {
    exposePipefyApp();
}

// Fallback
setTimeout(exposePipefyApp, 100);

console.log('üìã App carregado para GitHub Pages');